{"version":3,"sources":["webpack:///./src/components/typography.js","webpack:///./src/components/tags.js","webpack:///./src/pages/blog.js"],"names":["Typography","marginBottom","textAlign","propTypes","children","PropTypes","node","isRequired","number","oneOf","defaultProps","H1","withComponent","H2","H3","P","Tags","Blog","posts","data","blog","Fragment","title","styles","globals","to","map","post","key","id","fields","slug","frontmatter","date","tags","tag","excerpt"],"mappings":"sRAIMA,EAAU,8LAwBZC,IAxBY,IAyBZC,IAzBY,KA4BhBF,EAAWG,UAAY,CACrBC,SAAUC,IAAUC,KAAKC,WACzBN,aAAcI,IAAUG,OAAOD,WAC/BL,UAAWG,IAAUI,MAAM,CAAC,OAAQ,WAAWF,YAGjDP,EAAWU,aAAe,CACxBT,aAAc,EACdC,UAAW,QAGEF,IAEFW,EAAKX,EAAWY,cAAc,KAAzB,iCACLC,EAAKb,EAAWY,cAAc,KAAzB,iCACLE,EAAKd,EAAWY,cAAc,KAAzB,iCACLG,EAAIf,EAAWY,cAAc,IAAzB,iC,yEC7CjB,IAAMI,EAAI,2TAyBVA,EAAKb,UAAY,CACfC,SAAUC,IAAUC,KAAKC,YAGZS,O,kCChCf,oLAYe,SAASC,EAAT,GAAyB,IAC9BC,EAD6B,EAARC,KACNC,KAAfF,MAER,OACE,YAAC,IAAMG,SAAP,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAQC,OAAQC,MAChB,YAAC,IAAD,KACE,YAAC,OAAD,CAAMC,GAAG,KAAT,SAEF,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,aACCP,EAAMQ,KAAI,SAACC,GAAD,OACT,uBAASC,IAAKD,EAAKE,IACjB,YAAC,OAAD,CAAMJ,GAAIE,EAAKG,OAAOC,MACpB,sBAAKJ,EAAKK,YAAYV,QAExB,4CAAwBK,EAAKK,YAAYC,MACzC,YAAC,IAAD,KACGN,EAAKK,YAAYE,KAAKR,KAAI,SAACS,GAAD,OACzB,kBAAIP,IAAKO,GAAMA,OAInB,qBAAIR,EAAKS","file":"component---src-pages-blog-js-6446e61a4dd8b0af45e4.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { textAlign, marginBottom } from '../utils/styles';\n\nconst Typography = styled.div`\n  h1& {\n    font-size: 30px;\n  }\n\n  h2& {\n    font-size: 24px;\n  }\n\n  h3& {\n    font-size: 18px;\n  }\n\n  h1&,\n  h2&,\n  h3& {\n    color: #222;\n    text-transform: uppercase;\n  }\n\n  p& {\n    font-size: 16px;\n  }\n\n  ${marginBottom}\n  ${textAlign}\n`;\n\nTypography.propTypes = {\n  children: PropTypes.node.isRequired,\n  marginBottom: PropTypes.number.isRequired,\n  textAlign: PropTypes.oneOf(['left', 'center']).isRequired,\n};\n\nTypography.defaultProps = {\n  marginBottom: 0,\n  textAlign: 'left',\n};\n\nexport default Typography;\n\nexport const H1 = Typography.withComponent('h1');\nexport const H2 = Typography.withComponent('h2');\nexport const H3 = Typography.withComponent('h3');\nexport const P = Typography.withComponent('p');\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Tags = styled.ul`\n  display: block;\n  list-style: none;\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0;\n\n  li {\n    color: #ffffff;\n    font-size: 0.85em;\n    display: inline-block;\n    margin: 3px;\n    padding: 4px 8px;\n    background-color: #290070;\n  }\n\n  li:first-child {\n    margin-left: 0;\n  }\n\n  li:last-child {\n    margin-right: 0;\n  }\n`;\n\nTags.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { Global } from '@emotion/react';\nimport { globals } from '../utils/styles';\nimport Page from '../components/page';\nimport Container from '../components/container';\nimport Nav from '../components/nav';\nimport Tags from '../components/tags';\nimport { H2 } from '../components/typography';\nimport SEO from '../components/seo';\n\nexport default function Blog({ data }) {\n  const { posts } = data.blog;\n\n  return (\n    <React.Fragment>\n      <SEO title=\"Blog\" />\n      <Global styles={globals} />\n      <Nav>\n        <Link to=\"/\">Home</Link>\n      </Nav>\n      <Page>\n        <Container>\n          <H2>Blog</H2>\n          {posts.map((post) => (\n            <article key={post.id}>\n              <Link to={post.fields.slug}>\n                <h2>{post.frontmatter.title}</h2>\n              </Link>\n              <small>Last updated on {post.frontmatter.date}</small>\n              <Tags>\n                {post.frontmatter.tags.map((tag) => (\n                  <li key={tag}>{tag}</li>\n                ))}\n              </Tags>\n\n              <p>{post.excerpt}</p>\n            </article>\n          ))}\n        </Container>\n      </Page>\n    </React.Fragment>\n  );\n}\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    blog: allMarkdownRemark {\n      posts: nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true)\n          title\n          tags\n        }\n        excerpt\n        id\n      }\n    }\n  }\n`;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    blog: PropTypes.shape({\n      posts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          excerpt: PropTypes.string.isRequired,\n          fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired,\n          }).isRequired,\n          frontmatter: PropTypes.shape({\n            date: PropTypes.string.isRequired,\n            tags: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n            title: PropTypes.string.isRequired,\n          }).isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n"],"sourceRoot":""}