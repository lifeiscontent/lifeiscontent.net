{"version":3,"sources":["webpack:///./src/components/tags.js","webpack:///./src/pages/blog.js"],"names":["Tags","propTypes","children","PropTypes","node","isRequired","Blog","posts","data","blog","Fragment","title","styles","globals","to","map","post","key","id","fields","slug","frontmatter","date","tags","tag","excerpt"],"mappings":"kIAGA,IAAMA,EAAI,8SAyBVA,EAAKC,UAAY,CACfC,SAAUC,IAAUC,KAAKC,YAGZL,O,kCChCf,gMAae,SAASM,EAAT,GAAyB,IAC9BC,EAD6B,EAARC,KACNC,KAAfF,MAER,OACE,YAAC,IAAMG,SAAP,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAQC,OAAQC,MAChB,YAAC,IAAD,KACE,YAAC,OAAD,CAAMC,GAAG,KAAT,SAEF,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,aACCP,EAAMQ,KAAI,SAACC,GAAD,OACT,YAAC,IAAD,CAASC,IAAKD,EAAKE,IACjB,YAAC,OAAD,CAAMJ,GAAIE,EAAKG,OAAOC,MACpB,sBAAKJ,EAAKK,YAAYV,QAExB,4CAAwBK,EAAKK,YAAYC,MACzC,YAAC,IAAD,KACGN,EAAKK,YAAYE,KAAKR,KAAI,SAACS,GAAD,OACzB,kBAAIP,IAAKO,GAAMA,OAInB,qBAAIR,EAAKS","file":"component---src-pages-blog-js-6d0f7307ded6e5544d6c.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Tags = styled.ul`\n  display: block;\n  list-style: none;\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0;\n\n  li {\n    color: #ffffff;\n    font-size: 0.85em;\n    display: inline-block;\n    margin: 3px;\n    padding: 4px 8px;\n    background-color: #290070;\n  }\n\n  li:first-child {\n    margin-left: 0;\n  }\n\n  li:last-child {\n    margin-right: 0;\n  }\n`;\n\nTags.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { Global } from '@emotion/react';\nimport { globals } from '../utils/styles';\nimport Page from '../components/page';\nimport Container from '../components/container';\nimport Nav from '../components/nav';\nimport Tags from '../components/tags';\nimport { H2 } from '../components/typography';\nimport SEO from '../components/seo';\nimport Article from '../components/article';\n\nexport default function Blog({ data }) {\n  const { posts } = data.blog;\n\n  return (\n    <React.Fragment>\n      <SEO title=\"Blog\" />\n      <Global styles={globals} />\n      <Nav>\n        <Link to=\"/\">Home</Link>\n      </Nav>\n      <Page>\n        <Container>\n          <H2>Blog</H2>\n          {posts.map((post) => (\n            <Article key={post.id}>\n              <Link to={post.fields.slug}>\n                <h2>{post.frontmatter.title}</h2>\n              </Link>\n              <small>Last updated on {post.frontmatter.date}</small>\n              <Tags>\n                {post.frontmatter.tags.map((tag) => (\n                  <li key={tag}>{tag}</li>\n                ))}\n              </Tags>\n\n              <p>{post.excerpt}</p>\n            </Article>\n          ))}\n        </Container>\n      </Page>\n    </React.Fragment>\n  );\n}\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    blog: allMarkdownRemark {\n      posts: nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true)\n          title\n          tags\n        }\n        excerpt\n        id\n      }\n    }\n  }\n`;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    blog: PropTypes.shape({\n      posts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          excerpt: PropTypes.string.isRequired,\n          fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired,\n          }).isRequired,\n          frontmatter: PropTypes.shape({\n            date: PropTypes.string.isRequired,\n            tags: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n            title: PropTypes.string.isRequired,\n          }).isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n"],"sourceRoot":""}